SELECT
      BUYER.BUYER_ID
    , BUYER.BUYER_NAME
    , BUYER.BUYER_LGU
    , BUYER.BUYER_ZIP
    , BUYER.BUYER_ADD1
    , BUYER.BUYER_ADD2
    , BUYER.BUYER_COMTEL
    , BUYER.BUYER_CHARGER
    , LPROD.LPROD_NM
    , NVL(PROD_VIEW.PROD_COUNT, 0) PROD_COUNT
FROM BUYER
INNER JOIN LPROD ON (BUYER.BUYER_LGU = LPROD.LPROD_GU)
LEFT OUTER JOIN
    (SELECT 
        PROD_BUYER
        , COUNT(PROD_ID) PROD_COUNT
     FROM PROD
     GROUP BY PROD_BUYER
    ) PROD_VIEW ON (BUYER.BUYER_ID = PROD_VIEW.PROD_BUYER)
;

desc buyer;

-- 인라인뷰를 먼저 선언해서 사용해보기
-- 제일 먼저 실행되는 코드가된다.
-- 실행되는 순서, 가독성, 조인할 엔티티를 소규모로 접근가능
WITH PROD_VIEW AS (
    SELECT 
        PROD_BUYER
        , COUNT(PROD_ID) PROD_COUNT
    FROM PROD
    GROUP BY PROD_BUYER
), 
BUYER_VIEW AS (
    SELECT 
        BUYER.*
        , LPROD_NM
    FROM BUYER INNER JOIN LPROD ON (BUYER_LGU = LPROD_GU)
)
SELECT 
BUYER_VIEW.*
, PROD_COUNT
, LPROD_NM
FROM BUYER_VIEW LEFT OUTER JOIN PROD_VIEW ON(BUYER_ID = PROD_BUYER);



-- 두번째 방법
SELECT
    BUYER.BUYER_NAME
    , LPROD.LPROD_NM
    , (
        SELECT COUNT(PROD_ID)
        FROM PROD
        WHERE PROD_BUYER = BUYER.BUYER_ID
    ) AS PROD_COUNT
FROM BUYER INNER JOIN LPROD ON (BUYER_LGU = LPROD_GU);


SELECT -- SCALA QUERY : 조회결과가 반드시 1개여야함, 조회되는 결과가 1개여야함
FROM -- INLINE VIEW
WHERE -- SUB QUERY



-- 세번째 방법
SELECT COUNT(*)
FROM PROD RIGHT OUTER JOIN BUYER ON (BUYER_ID = PROD_BUYER);

-- 거래품목이 존재하지 않는 거래처의 이름과 담당자 이름 조회
-- 내가한거
SELECT BUYER_NAME, BUYER_CHARGER
FROM BUYER
LEFT OUTER JOIN PROD
ON (BUYER_ID = PROD_BUYER)
WHERE PROD_ID IS NULL;
-- 선생님이 한거
SELECT BUYER_NAME, BUYER_CHARGER
FROM BUYER
WHERE BUYER_ID NOT IN (SELECT PROD_BUYER FROM PROD);



-- 추가 미션
SELECT *
FROM CART
INNER JOIN PROD ON (CART.CART_PROD = PROD.PROD_ID)
WHERE CART.CART_MEMBER = 'a001';

SELECT *
FROM MEMBER
LEFT OUTER JOIN CART ON (MEMBER.MEM_ID = CART.CART_MEMBER)
LEFT OUTER JOIN PROD ON(CART.CART_PROD = PROD.PROD_ID)
WHERE MEMBER.MEM_ID = 'n001';

DELETE FROM CART
WHERE CART_MEMBER = 'n001';

SELECT *
FROM CART
WHERE CART_MEMBER = 'n001';

WITH CART_VIEW AS (
    SELECT *
    FROM CART LEFT OUTER JOIN PROD ON (CART.CART_PROD = PROD.PROD_ID)
)
SELECT *
FROM MEMBER LEFT OUTER JOIN CART_VIEW ON (MEM_ID = CART_VIEW.CART_MEMBER)
WHERE MEM_ID = 'n001'
;


-- 추가에 또 추가 미션
-- 회원 중 단한번도 구매를 안한사람

SELECT *
FROM MEMBER
WHERE MEM_ID NOT IN (
    SELECT DISTINCT CART_MEMBER
    FROM CART
)

SELECT *
FROM CART


















