COMMENT ON COLUMN GROUB_TEST_SPACE.USERS.MSNGR_STTS IS 'MS001, 사원의 메신저 상의 상태표시';

ALTER TABLE GROUB_TEST_SPACE.BBS MODIFY BBS_CLSF CHAR(2) NULL;
ALTER TABLE GROUB_TEST_SPACE.BBS MODIFY BBS_CLSF CHAR(5) NOT NULL;
COMMENT ON COLUMN GROUB_TEST_SPACE.BBS.BBS_CLSF IS 'HD001,공통코드_게시판 분류';
COMMENT ON COLUMN GROUB_TEST_SPACE.USERS_AUTH.AUTH IS 'AU001, 권한 공통코드';
COMMENT ON TABLE GROUB_TEST_SPACE.EMP_INFO IS '그룹웨어를 사용중인 계정의 사원으로서의 정보 테이블';
COMMENT ON TABLE GROUB_TEST_SPACE.CRTFCT_ACQS IS '각 사원의 자격증 취득현황을 기입한 테이블';



--첨부파일 테이블 구조 변경
DROP TABLE BBS_ATCH;
ALTER TABLE BBS_ATCH_DET RENAME TO BBS_ATCH;
ALTER TABLE BBS_ATCH ADD PST_NO NUMBER NOT NULL;
COMMENT ON COLUMN GROUB_TEST_SPACE.BBS_ATCH.PST_NO IS '게시물 관리번호';
ALTER TABLE BBS_ATCH ADD CONSTRAINT FK_BBS_TO_BBS_ATCH foreign KEY(PST_NO) references BBS (PST_NO);
--첨부파일 테이블 구조 변경 끝

--메일 첨부파일 테이블 구조 변경
DROP TABLE MAIL_ATCH;
ALTER TABLE MAIL_ATCH_DET RENAME TO MAIL_ATCH;
ALTER TABLE MAIL_ATCH ADD EML_NO NUMBER NOT NULL;
COMMENT ON COLUMN GROUB_TEST_SPACE.MAIL_ATCH.EML_NO IS '메일 관리번호';
ALTER TABLE MAIL_ATCH ADD CONSTRAINT FK_MAIL_TO_MAIL_ATCH foreign KEY(EML_NO) references MAIL (EML_NO);
--메일 첨부파일 테이블 구조 변경 끝


--자동 로그인 정보 저장 테이블 생성
CREATE TABLE persistent_logins (
    username VARCHAR(64) NOT NULL,
    series VARCHAR(64) PRIMARY KEY,
    token VARCHAR(64) NOT NULL,
    last_used TIMESTAMP NOT NULL
);

--아현 AI메뉴 추천 테이블 생성
CREATE TABLE MENU (
	M_ID	VARCHAR2(20)	NOT NULL,
	M_NM	VARCHAR2(20)	NOT NULL
)

--아현 AI메뉴 추천 테이블 생성
ALTER TABLE MENU ADD CONSTRAINT PK_MENU PRIMARY KEY (
	M_ID
)

--아현 AI 식사기록  테이블 생성
CREATE TABLE DIET (
	D_NO	NUMBER	NOT NULL,
	USER_ID	VARCHAR2(30)	NULL,
	AGE	NUMBER	NULL,
	DIET_DT	CHAR(6)	NULL,
	M_ID	VARCHAR2(20)	NULL
);

--아현 AI 식사기록  테이블 생성
ALTER TABLE DIET ADD CONSTRAINT PK_DIET PRIMARY KEY (
	D_NO
);

--풀캘린더 테이블
CREATE TABLE CALENDAR (
  CALENDAR_NO NUMBER NOT NULL, 
  CALENDAR_TITLE VARCHAR2(200) NOT NULL, 
  CALENDAR_MEMO VARCHAR2(500),
  CALENDAR_START DATE, 
  CALENDAR_END DATE, 
  CALENDAR_COLOR VARCHAR2(20), 
  ALLDAY VARCHAR2(20), 
  CONSTRAINT PK_CAL_NO PRIMARY KEY (CALENDAR_NO)
);

--풀캘린더 시퀀스
CREATE SEQUENCE cal_seq
       INCREMENT BY 1
       START WITH 1
       MINVALUE 1
       MAXVALUE 9999
       NOCYCLE
       NOCACHE
       NOORDER;


--공통코드 관리 함수
CREATE OR REPLACE FUNCTION FN_GET_MNG_CD_NM(P_MNG_CD IN VARCHAR2)
RETURN VARCHAR2
IS
    V_MNG_CD_NM1 VARCHAR2(100);
BEGIN
    SELECT MNG_CD_NM1 INTO V_MNG_CD_NM1 FROM MANAGE_CODE WHERE MNG_CD = P_MNG_CD;
    RETURN V_MNG_CD_NM1;
    
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('오류 발생');
END;

/

CREATE OR REPLACE FUNCTION FN_GET_CST_CD_NM2CO(P_CST_CD IN VARCHAR2, P_CO_ID IN VARCHAR2)
RETURN VARCHAR2
IS
    V_CST_CD_NM VARCHAR2(100);
BEGIN
    SELECT CST_CD_NM INTO V_CST_CD_NM FROM CUSTOME_CODE WHERE CST_CD = P_CST_CD AND CO_ID = P_CO_ID;
    RETURN V_CST_CD_NM;
    
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('오류 발생');
END;

/

CREATE OR REPLACE FUNCTION FN_GET_DEPT_NO_NM(P_DEPT_NO IN VARCHAR2, P_CO_ID IN VARCHAR2)
RETURN VARCHAR2
IS
    V_DEPT_NM VARCHAR2(100);
BEGIN
    SELECT DEPT_NM INTO V_DEPT_NM FROM DEPT WHERE DEPT_NO = P_DEPT_NO AND CO_ID = P_CO_ID;
    RETURN V_DEPT_NM;
    
    EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('오류 발생');
END;



