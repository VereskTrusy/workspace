<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.buyer.dao.BuyerDAO">

	
	<!-- 디비 관계설정시 요게 2번 으로 설정되어야함 -->
	<resultMap type="BuyerVO" id="BuyerMap" autoMapping="true">
		<id property="buyerId" column="BUYER_ID"/><!-- pk에 따라 설정한다. 복합키를 사용하는 경우 id도 두개가 만들어져야한다. -->
		<association property="lprod" javaType="LprodVO" autoMapping="true" />
		<collection property="prodList" ofType="ProdVO" autoMapping="true" />
	</resultMap>
	
	<select id="selectBuyerList" resultMap="BuyerMap">
		WITH PROD_VIEW AS (
			SELECT 
			    PROD_BUYER
			    , COUNT(PROD_ID) PROD_COUNT
			FROM PROD
			GROUP BY PROD_BUYER
		),
		BUY_VIEW AS (
			SELECT *
			FROM BUYER
			INNER JOIN LPROD ON (BUYER.BUYER_LGU = LPROD.LPROD_GU)
		)
		SELECT
		      BUYER.BUYER_ID
		    , BUYER.BUYER_NAME
		    , BUYER.BUYER_LGU
		    , BUYER.BUYER_ZIP
		    , BUYER.BUYER_ADD1
		    , BUYER.BUYER_ADD2
		    , BUYER.BUYER_COMTEL
		    , BUYER.BUYER_CHARGER
		    , LPROD.LPROD_NM
		    , NVL(PROD_VIEW.PROD_COUNT, 0) PROD_COUNT
		FROM BUY_VIEW
		LEFT OUTER JOIN PROD_VIEW ON (BUYER.BUYER_ID = PROD_VIEW.PROD_BUYER)
	</select>
	
	<select id="selectBuyer" parameterType="String" resultMap="BuyerMap">
		<!-- 거래처 단일 정보, 분류명, 거래품목(상품코드, 상품명, 구매가, 판매가, 마일리지)  -->
		SELECT 
			  BUYER.BUYER_ID /* 거래처아이디 */
			, BUYER.BUYER_NAME /* 거래처명 */
			, BUYER.BUYER_LGU /* 거래처코드 */
			, BUYER.BUYER_BANK /* 은행명 */
			, BUYER.BUYER_BANKNO /* 계좌번호 */
			, BUYER.BUYER_BANKNAME /* 예금주명 */
			, BUYER.BUYER_ZIP /* 우편번호 */
			, BUYER.BUYER_ADD1 /* 기본주소 */
			, BUYER.BUYER_ADD2 /* 상세주소 */
			, BUYER.BUYER_COMTEL /* 회사전화번호 */
			, BUYER.BUYER_FAX /* 팩스번호 */
			, BUYER.BUYER_MAIL /* 이메일 */
			, BUYER.BUYER_CHARGER /* 담당자 */
			, BUYER.BUYER_TELEXT /* 전화번호? */
			, LPROD.LPROD_ID /* 상품순번 */
			, LPROD.LPROD_GU /* 상품분류코드 */
			, LPROD.LPROD_NM /* 상품분류명 */
			, PROD.PROD_ID /* 상품코드 */
			, PROD.PROD_NAME /* 상품명 */
			, PROD.PROD_LGU /* 상품분류 */
			, PROD.PROD_BUYER /* 거래처 */
			, PROD.PROD_COST /* 구매가 */
			, PROD.PROD_PRICE /* 판매가 */
			, PROD.PROD_SALE /* 세일가 */
			, PROD.PROD_OUTLINE /* 요약정보 */
			, PROD.PROD_DETAIL /* 상세정보 */
			, PROD.PROD_IMG /* 이미지 */
			, PROD.PROD_TOTALSTOCK /* 총재고 */
			, PROD.PROD_INSDATE /* 입고일 */
			, PROD.PROD_PROPERSTOCK /* 적정재고 */
			, PROD.PROD_SIZE /* 크기 */
			, PROD.PROD_COLOR /* 색상 */
			, PROD.PROD_DELIVERY /* 배송방법 */
			, PROD.PROD_UNIT /* 단위 */
			, PROD.PROD_QTYIN /* 입고량 */
			, PROD.PROD_QTYSALE /* 출고량 */
			, PROD.PROD_MILEAGE /* 마일리지 */
		FROM BUYER
		INNER JOIN LPROD ON (BUYER.BUYER_LGU = LPROD.LPROD_GU)
		LEFT OUTER JOIN PROD ON (BUYER.BUYER_ID = PROD.PROD_BUYER)
		WHERE BUYER.BUYER_ID = #{buyerId}
	</select>
</mapper>